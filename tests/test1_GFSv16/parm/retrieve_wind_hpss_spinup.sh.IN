##!/bin/bash

source ${TEST_DIR}/input_vars.sh
source ${BIN_DIR}/loadmodules.sh

  module purge
  module use $hpcstackpath
  module load $hpcstackversion
  module load $modcomp
  module load $modnetcdf
  module load $modcdo
  module load $modnco
  module load $modwgrib2
  module load $modhpss

 module list
#-----------------------------------------------------------------------------------#

FORCING_GFS='FORCING_T'
STARTDATE="FRC_BEG"
ENDDATE="FRC_END"
start=$(date -d $STARTDATE +%s)
end=$(date -d $ENDDATE +%s)


#-----------------------------------------------------------------------------------#
#                                        WIND (hourly)                              #
#-----------------------------------------------------------------------------------#

  echo ' '                                                                 
  echo '       *****************************************************************'     
  echo "      ***                     Wind Forcing Prep                        ***"
  echo '       *****************************************************************'    
  echo ' ' 



d="$start"
echo "start date: $(date -d @$start '+%Y-%m-%d %2H')"
echo "end date: $(date -d @$end '+%Y-%m-%d %2H')"

#-----------------------------------------------------------------------------------#
# retrieve from gfs atmos
if [ $FORCING_GFS = 'YES' ]
then
echo "retrieving from gfs/atmos"

#define two fields (u10, v10)
npp=2
  varname[1]='UGRD'
  varname[2]='VGRD'
  lev[1]=':10 m above ground:'
  lev[2]=':10 m above ground:'
#-----------------------------------------------------------------------------------#
while [[ $d -le $end ]]
do
date -d @$d '+%Y-%m-%d %2H'
    YY=$(date -d @$d '+%Y')
    MM=$(date -d @$d '+%m')
    DD=$(date -d @$d '+%d')
    HH=$(date -d @$d '+%2H')
#-----------------------------------------------------------------------------------#
  FILEWAVE=(/NCEPPROD/hpssprod/runhistory/rh$YY/$YY$MM/$YY$MM$DD/com_gfs_prod_gfs.${YY}${MM}${DD}_${HH}.gfs_pgrb2.tar)
  atmosDIR=./gfs.$YY$MM$DD/${HH}
  atmos=${atmosDIR}/gfs.t${HH}z.pgrb2.0p25.f00
    if [ ! -d ${atmosDIR} ]
    then
      htar -xvf $FILEWAVE ${atmos}0 ${atmos}1 ${atmos}2 ${atmos}3 ${atmos}4 ${atmos}5
    fi
#-----------------------------------------------------------------------------------#
# convert grib2 to netcdf
rm ${atmosDIR}/*nc
grib2_list=`( ls ${atmosDIR}/ )`
echo $grib2_list
for file in $grib2_list
  do
    count=0
    while (( count < $npp ))
    do
      (( count = count + 1 ))
       wgrib2 ${atmosDIR}/$file -s | grep "${varname[count]}${lev[count]}" | wgrib2 -i ${atmosDIR}/$file -netcdf ${atmosDIR}/$file.${varname[count]}.nc -nc4
       echo $count       
          ncks -A ${atmosDIR}/$file.${varname[count]}.nc ${atmosDIR}/$file.nc
       rm  ${atmosDIR}/$file.${varname[count]}.nc
    done

echo $file
done
#-----------------------------------------------------------------------------------#
#check the netcdf files
unset nc_file_list
for i in `seq 0 1 5`; do
  if [ -f ${atmos}${i}.nc ];then
     nc_file_list="$nc_file_list ${atmos}${i}.nc"
  else
     echo "${atmos}${i}.nc does not exist"
  fi
done
if [ $d == $start ]; then
#Append netcdf files
ncrcat -h $nc_file_list gfs_wnd_spinup.nc
else
mv gfs_wnd_spinup.nc gfs_wnd_spinup_tmp.nc
ncrcat -h  gfs_wnd_spinup_tmp.nc $nc_file_list gfs_wnd_spinup.nc
fi

    d=$(( $d + 21600 ))
done

rm *tmp gfs_wnd_spinup_tmp.nc 

echo '       *****************************************************************' 
  echo "gfs_wnd_spinup.nc prepared"
  echo ' '                                                                 
  echo '       *****************************************************************'     
  echo "     ***                            done                               ***"
  echo '       *****************************************************************'    
  echo ' '  
#-----------------------------------------------------------------------------------#
#-----------------------------------------------------------------------------------#
#-----------------------------------------------------------------------------------#
fi
