#!/bin/bash
# --------------------------------------------------------------------------- #
# divider simply divides the main matrix into subsets with a given            #
# number of test (maxlist)                                                    #
#                                                                             #
# Remarks:                                                                    #
# - Once the matrix is generated, this script can be execute. The user should #
#   define the maxlist and this script divide the matrix into matrix? and     #
#   submit the job using sbatch.                                              #
#                                                                             #
#                                                      Ali Abdolali           #
#                                                      August 2018            #
#                                              Updated:  May 2021             #
#                                                                             #
#    Copyright 2013 National Weather Service (NWS),                           #
#       National Oceanic and Atmospheric Administration.  All rights          #
#       reserved.  WAVEWATCH III is a trademark of the NWS.                   #
#       No unauthorized use without permission.                               #
#                                                                             #
# --------------------------------------------------------------------------- #
# --------------------------------------------------------------------------- #
# 0. Check input command                                                      #
# --------------------------------------------------------------------------- #

  if [ -z "$1" ] || [ -z "$2" ] 
  then
    printf "\n ERROR ABORTING \n"
    printf "\n divider requires 2 arguments: "
    printf "   1: matrix type (eg, initial), 2: number of tests in each sub-matrix. \n"
    printf "\n Usage:"
    printf "  example:  ./bin/divider initial 3 \n\n"
    exit
  fi

  matrix=$1
  maxlist=$2
  home_dir=`pwd`
# --------------------------------------------------------------------------- #
# 1.  clean up and definitions                                                #
# --------------------------------------------------------------------------- #
cp $matrix matrix.tmp
# --------------------------------------------------------------------------- #
# 1.  clean up and definitions                                                #
# --------------------------------------------------------------------------- #
cp $matrix matrix.tmp
HOME=${PWD%/*}

#Put the job requirement/spec in "before"
sed -e "/work_/,\$d" matrix.tmp > before

#serial jobs
command egrep 'work_' matrix.tmp | cat >> list
split -dl $maxlist list list_
rm list
matrixno=$(ls list_* | wc -l)
echo "Total nummber of $matrix subsets = $matrixno; each includes $maxlist tests"
rm matrix.tmp

# --------------------------------------------------------------------------- #
# 2.  Divide and dump in subsets                                              #
# --------------------------------------------------------------------------- #
count=0
  for i in `seq -f '%02g' 0 "$((matrixno - 1))"`; do
#echo $i
#Replace $matrix.out > $matrix?.out, model > model?
  (( count = count + 1 ))
  if [ -f "$matrix${count}" ]; then rm -f $matrix${count}; fi
  cat before >> $matrix$count
  cat list_$i >> $matrix$count
  sed -i 's/'.out'/'${count}.out'/gI' ${matrix}${count}
  sed -i 's/'model'/'model${count}'/gI' $matrix$count
  echo "  echo ' '"                                                                     >> $matrix$count
  echo "  echo '     **************************************************************'"   >> $matrix$count
  echo "  echo '    *  end of WAVEWATCH III $matrix$count of regression tests     *'"   >> $matrix$count
  echo "  echo '     **************************************************************'"   >> $matrix$count
  echo "  echo ' '"                                                                     >> $matrix$count
  echo "rm -rf ../WW3/model${count}"                                                    >> $matrix$count
#make sure ../model$count does not exist and copy a fresh copy
  awk '1;/cd/ && !x {print "  cp -r ../WW3/model ../WW3/model'$count'"; x=1;}' $matrix$count > tmpfile && mv tmpfile $matrix$count
  awk '1;/cd/ && !x {print "  if [ -d ../WW3/model'${count}' ]; then rm -rf ../WW3/model'${count}'; fi"; x=1;}' $matrix$count > tmpfile && mv tmpfile $matrix$count

#sbatch $matrix$count
  echo " $matrix$count prepared"
 done

# --------------------------------------------------------------------------- #

rm before
rm list*

  echo "file $matrix is divided into $count subsets ...."

# --------------------------------------------------------------------------- #
# End to divider                                                              #
# --------------------------------------------------------------------------- #

